<script src="/socket.io/socket.io.js"></script>
<script src="http://wzrd.in/standalone/uuid%2Fv4@latest"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script>
    let socketHttp = io.connect('http://localhost:3000');
    let socketHttps = io.connect('https://localhost:3080');

    let username = 'anonymous';
    socketHttps.on('connection', (data) => {
        username = data.username;
    });
    $('form.join').submit(function (e) {
        e.preventDefault();
        let room = $('input', this).val();
        let id = uuidv4();
        let data = {
            room: $(this).parent().attr('id')
        };
        socketHttp.emit('join_room', {id: id, data: data});
        socketHttps.emit('join_room', {id: id, data: data});

        $(this).parent().attr('id', room);
        $(this).siblings('.message').show();
    });

    $('form.message').submit(function (e) {
        e.preventDefault();
        if ($('textarea', this).val()) {
            let id = uuidv4();
            let data = {
                username: username,
                room: $(this).parent().attr('id'),
                message: $('textarea', this).val()
            };
            socketHttp.emit('chat_message', {id: id, data: data});
            socketHttps.emit('chat_message', {id: id, data: data});
            $('textarea', this).val('');
        }
    });

    socketHttps.on('chat_message', function (data) {
        handlePackets(data, function () {
            handleChatMessage(data.data);
        });
    });
    socketHttp.on('chat_message', function (data) {
        handlePackets(data, function () {
            handleChatMessage(data.data);
        });
    });

    function handleChatMessage(data) {
        $('.messages').prepend($('<li>').text(data.username + ' : ' + data.message));
    }

    let packets = [];

    function handlePackets(data, callback) {
        let found = false;
        packets.forEach((packet) => {
            if (data.id === packet.id && JSON.stringify(data.data) === JSON.stringify(packet.data) && typeof callback === "function") {
                callback(data);
                packets.splice(packets.indexOf(packet), 1);
                found = true;
            }
        });
        if (!found) {
            packets.push(data)
        }
    }
</script>
</body>
</html>
